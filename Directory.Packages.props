<?xml version="1.0" encoding="utf-8"?>
<Project>
  <!-- https://learn.microsoft.com/nuget/consume-packages/central-package-management -->
  <PropertyGroup>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>
    <RoslynVersion>4.12.0</RoslynVersion>
    <RoslynVersionForAnalyzers>4.11.0</RoslynVersionForAnalyzers>
    <PolyTypeVersion>0.24.1</PolyTypeVersion>
  </PropertyGroup>
  <ItemGroup>
    <PackageVersion Include="BenchmarkDotNet" Version="0.14.0" />
    <PackageVersion Include="BenchmarkDotNet.Diagnostics.Windows" Version="0.14.0" />
    <PackageVersion Include="DiffPlex" Version="1.7.2" />
    <PackageVersion Include="MessagePack" Version="3.1.1" />
    <PackageVersion Include="Microsoft.CodeAnalysis.CSharp" Version="$(RoslynVersion)" />
    <PackageVersion Include="Microsoft.CodeAnalysis.CSharp.CodeFix.Testing.XUnit" Version="1.1.2" />
    <PackageVersion Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(RoslynVersion)" />
    <PackageVersion Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4" />
    <PackageVersion Include="Microsoft.NET.StringTools" Version="17.12.6" />
    <PackageVersion Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.12.19" />
    <PackageVersion Include="Microsoft.VisualStudio.Validation" Version="17.8.8" />
    <PackageVersion Include="Nerdbank.Streams" Version="2.11.79" />
    <PackageVersion Include="Newtonsoft.Json.Schema" Version="4.0.1" />
    <PackageVersion Include="PolyType" Version="$(PolyTypeVersion)" />
    <PackageVersion Include="PolyType.TestCases" Version="$(PolyTypeVersion)" />
    <PackageVersion Include="System.IO.Pipelines" Version="9.0.0" />
    <PackageVersion Include="Xunit.Combinatorial" Version="2.0.24" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkIdentifier)'!='.NETCoreApp'">
    <!-- The versions specified here should be the latest ones supported by the OLDEST .NET runtime version that is still supported
         so that as someone references the .NET Standard version and then runs against the .NET build, they don't get an older
         dependency than they were expecting or needlessly bring in a 9.0 assembly to an 8.0 runtime. -->
    <PackageVersion Include="Microsoft.Bcl.HashCode" Version="6.0.0" />
    <PackageVersion Include="System.Collections.Immutable" Version="8.0.0" />
    <PackageVersion Include="System.Text.Json" Version="8.0.5" />
  </ItemGroup>
  <ItemGroup Condition="'$(IsAnalyzerProject)'=='true'">
    <PackageVersion Update="System.Collections.Immutable" Version="8.0.0" />
    <PackageVersion Update="Microsoft.CodeAnalysis.CSharp" Version="$(RoslynVersionForAnalyzers)" />
    <PackageVersion Update="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(RoslynVersionForAnalyzers)" />
  </ItemGroup>
  <ItemGroup Label="Library.Template">
    <PackageVersion Include="Microsoft.NET.Test.Sdk" Version="17.12.0" />
    <PackageVersion Include="xunit.runner.visualstudio" Version="3.0.1" />
    <PackageVersion Include="xunit.v3" Version="1.0.1" />
  </ItemGroup>
  <ItemGroup>
    <GlobalPackageReference Include="Microsoft.CodeAnalysis.ResxSourceGenerator" Version="3.11.0-beta1.24527.2" />
  </ItemGroup>
  <ItemGroup Label="Library.Template">
    <GlobalPackageReference Include="CSharpIsNullAnalyzer" Version="0.1.593" />
    <GlobalPackageReference Include="DotNetAnalyzers.DocumentationAnalyzers" Version="1.0.0-beta.59" />
    <!-- The condition works around https://github.com/dotnet/sdk/issues/44951 -->
    <GlobalPackageReference Include="Nerdbank.GitVersioning" Version="3.7.115" Condition="!('$(TF_BUILD)'=='true' and '$(dotnetformat)'=='true')" />
    <GlobalPackageReference Include="PolySharp" Version="1.15.0" />
    <GlobalPackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.556" />
  </ItemGroup>
</Project>
